unit Base.Builder;

interface

uses
  Base.Collections;

type
  TBuilderSQL = class
  strict protected
    Table: string;
    Fields: TCollectionsSQL;
    Wheres: TCollectionsSQL;
  public
    function AddTable( const ATable: string ): TBuilderSQL;

    function AddField( const AField: string; const AValue: Variant ): TBuilderSQL; overload;

    function AddWhere( const AField: string; const AValue: Variant ): TBuilderSQL; overload;
    function AddWhere( const ATable: string; const AField: string; const AValue: Variant ): TBuilderSQL; overload;

    function GetSQL(): string; virtual;
  end;

implementation

function TBuilderSQL.AddTable(const ATable: string): TBuilderSQL;
begin
  Table:= ATable;

  Result:= Self;
end;



function TBuilderSQL.AddField(const AField: string;
  const AValue: Variant): TBuilderSQL;
begin
 Fields.Add( EmptyStr, AField, AValue );

 Result:= Self;
end;



function TBuilderSQL.AddWhere(const AField: string;
  const AValue: Variant): TBuilderSQL;
begin
  AddWhere( EmptyStr, AField, AValue );

  Result:= Self;
end;



function TBuilderSQL.AddWhere(const ATable, AField: string;
  const AValue: Variant): TBuilderSQL;
begin
  Wheres.Add( ATable, AField, AValue );

  Result:= Self;
end;


function TBuilderSQL.GetSQL: string;
begin
  raise Exception.Create('Função não implementada');
end;

end.
